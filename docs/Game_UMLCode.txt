@startuml

skinparam linetype ortho
skinparam nodesep 60
skinparam ranksep 60
skinparam classFontSize 14
skinparam classFontStyle bold
skinparam classAttributeIconSize 0
skinparam ArrowColor #333333

interface Weapon

interface SpawnableZone{
virtual void spawn_collider(Collide& collider)
}

interface GameZone{
virtual void move(player_id_t id,Position& position) = 0;
}

interface CanInteract {
 virtual void damage(uint8_t damage) = 0;
 virtual void equip(Weapon& weapon) = 0;
}

interface DropeableZone {
virtual void drop(Weapon& dropeable)
}


class GameManager {
//POSIBLE STRUCT
map <player_id_t, Player> players
map <player_id_t, Team> players_team
map <player_id_t, Weapon> weapons
}

class Equipement{
  //Unique pointers a Weapons
}
class Map{
  std::vector<player_id_t ,player_entity_t> players_positions
  std::vector<Weapon, Position> weapons_dropped
}
class CollisionManager

abstract Player {
    int health
    virtual PlayerImage info_player() = 0
}

class Bomb { 
//Posiblemente esta sea conocida por Map y Player,
}

interface Weapon { 
    virtual void set_on_action(ISpawneableZone& spawn, player_id_t id, Position& direction) = 0; 
    virtual void reload() = 0;
}

abstract FireableWeapon

class Ak47 

class Glock 

class Knife

class Bomb

Weapon <|.. FireableWeapon

FireableWeapon <|-- Ak47
FireableWeapon <|-- Glock
Weapon <|.. Bomb
Weapon <|.. Knife


GameManager "1"*--"10" Player
GameManager "1" *-- "n" Weapon
GameManager *--> Map
SpawnableZone <|.. Map
Weapon ..> SpawnableZone : conoce a 
GameZone <|.. Map
Map *--> CollisionManager
DropeableZone <|.. Map
Player ..> GameZone  : conoce
Player ..> DropeableZone : conoce
CanInteract <|.. Player
Player *--> Equipement
Equipement "1" o--> "4" Weapon
CollisionManager ..> CanInteract : tiene referencia a 
@enduml